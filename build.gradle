plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.greenpulse.auth'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Keycloak Spring Adapter
	implementation 'org.keycloak:keycloak-spring-boot-starter:22.0.3'

	// Keycloak Admin Client
	implementation 'org.keycloak:keycloak-admin-client:22.0.5'

	// Jakarta WS RS API (нужно для Response, etc.)
	implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'

	// Jersey Client (может понадобиться Keycloak Admin Client'у)
	implementation 'org.glassfish.jersey.core:jersey-client:3.1.3'

	// JWT Support
	implementation("io.jsonwebtoken:jjwt:0.12.5")
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// Kafka
	implementation("org.springframework.kafka:spring-kafka")

	implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.10'
}


tasks.named('test') {
	useJUnitPlatform()
}
